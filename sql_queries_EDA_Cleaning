-- Drop existing cleaned tables if they exist
DROP TABLE IF EXISTS users_cleaned;
DROP TABLE IF EXISTS sessions_cleaned;
DROP TABLE IF EXISTS flights_cleaned;
DROP TABLE IF EXISTS hotels_cleaned;

-- Create cleaned users table
CREATE TABLE users_cleaned AS
SELECT DISTINCT 
    user_id, 
    LOWER(TRIM(gender)) AS gender,  
    birthdate, 
    IF(married IS NULL, 0, married) AS married,  
    IF(has_children IS NULL, 0, has_children) AS has_children,  
    home_country, 
    home_city, 
    UPPER(TRIM(home_airport)) AS home_airport,  
    home_airport_lat, 
    home_airport_lon, 
    sign_up_date
FROM users
WHERE birthdate <= sign_up_date  
AND birthdate >= '1920-01-01';

-- Create cleaned sessions table
CREATE TABLE sessions_cleaned AS
SELECT DISTINCT 
    session_id, 
    user_id, 
    trip_id, 
    session_start, 
    session_end, 
    IFNULL(flight_discount, 0) AS flight_discount,  
    IFNULL(hotel_discount, 0) AS hotel_discount,  
    IFNULL(flight_discount_amount, 0) AS flight_discount_amount,  
    IFNULL(hotel_discount_amount, 0) AS hotel_discount_amount,  
    IFNULL(flight_booked, 0) AS flight_booked,  
    IFNULL(hotel_booked, 0) AS hotel_booked,  
    page_clicks,  
    IFNULL(cancellation, 0) AS cancellation  
FROM sessions
WHERE session_end > session_start;

-- Create cleaned flights table
CREATE TABLE flights_cleaned AS
SELECT DISTINCT 
    trip_id, 
    UPPER(TRIM(origin_airport)) AS origin_airport,  
    UPPER(TRIM(destination_airport)) AS destination_airport,  
    destination, 
    IFNULL(seats, 1) AS seats,  
    IFNULL(return_flight_booked, 0) AS return_flight_booked,  
    departure_time, 
    return_time, 
    checked_bags,  
    UPPER(TRIM(trip_airline)) AS trip_airline,  
    destination_airport_lat, 
    destination_airport_lon, 
    base_fare_usd
FROM flights
WHERE departure_time >= '2020-01-01'  
AND base_fare_usd > 0;

-- Create cleaned hotels table
CREATE TABLE hotels_cleaned AS
SELECT DISTINCT 
    trip_id, 
    LOWER(TRIM(hotel_name)) AS hotel_name,  
    nights, 
    rooms, 
    check_in_time, 
    check_out_time, 
    hotel_per_room_usd
FROM hotels
WHERE nights > 0  
AND hotel_per_room_usd > 0;

-- Generate User Demographics Report
SELECT 
    gender, 
    married, 
    has_children, 
    COUNT(*) AS user_count
FROM users_cleaned
GROUP BY gender, married, has_children
ORDER BY user_count DESC;

-- Generate Session Activity Summary
SELECT 
    COUNT(*) AS total_sessions,
    AVG(page_clicks) AS avg_clicks_per_session,
    AVG(TIMESTAMPDIFF(SECOND, session_start, session_end)) AS avg_session_length_seconds,
    SUM(flight_booked) AS total_flights_booked,
    SUM(hotel_booked) AS total_hotels_booked
FROM sessions_cleaned;

-- Generate Flight Trends Report
SELECT 
    trip_airline, 
    COUNT(*) AS flights_booked,
    AVG(base_fare_usd) AS avg_ticket_price,
    SUM(seats) AS total_seats_sold
FROM flights_cleaned
GROUP BY trip_airline
ORDER BY flights_booked DESC
LIMIT 10;

-- Generate Hotel Trends Report
SELECT 
    hotel_name, 
    COUNT(*) AS total_bookings, 
    AVG(nights) AS avg_nights,
    AVG(hotel_per_room_usd) AS avg_price_per_night
FROM hotels_cleaned
GROUP BY hotel_name
ORDER BY total_bookings DESC
LIMIT 10;


